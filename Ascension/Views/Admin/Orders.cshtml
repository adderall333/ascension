@using Models
@model List<Models.Order>

@{
    ViewBag.Title = "Admin page";
    Layout = "_Layout";
}

<div class="standard-text">
    <a asp-controller="Admin" asp-action="Index">‚Üê Back</a>
</div>

@foreach (var order in Model)
{
    <div class="row" style="margin-bottom: 10px">
        <div class="col-2">
            @order.ToString()
        </div>
        <div class="col-3">
            <form method="post">
                    <input type="hidden" name="id" value="@order.Id">
                <select class="status-select" name="status">
                    @if (order.Status == Status.NotPaid)
                    {
                        <option value="@Status.NotPaid" selected>@Status.NotPaid.ToString()</option>
                    }
                    else
                    {
                        <option value="@Status.NotPaid">@Status.NotPaid.ToString()</option>
                    }

                    @if (order.Status == Status.Paid)
                    {
                        <option value="@Status.Paid" selected>@Status.Paid.ToString()</option>
                    }
                    else
                    {
                        <option value="@Status.Paid">@Status.Paid.ToString()</option>
                    }

                    @if (order.Status == Status.Packing)
                    {
                        <option value="@Status.Packing" selected>@Status.Packing.ToString()</option>
                    }
                    else
                    {
                        <option value="@Status.Packing">@Status.Packing.ToString()</option>
                    }

                    @if (order.Status == Status.Delivering)
                    {
                        <option value="@Status.Delivering" selected>@Status.Delivering.ToString()</option>
                    }
                    else
                    {
                        <option value="@Status.Delivering">@Status.Delivering.ToString()</option>
                    }

                    @if (order.Status == Status.Delivered)
                    {
                        <option value="@Status.Delivered" selected>@Status.Delivered.ToString()</option>
                    }
                    else
                    {
                        <option value="@Status.Delivered">@Status.Delivered.ToString()</option>
                    }

                    @if (order.Status == Status.Cancelled)
                    {
                        <option value="@Status.Cancelled" selected>@Status.Cancelled.ToString()</option>
                    }
                    else
                    {
                        <option value="@Status.Cancelled">@Status.Cancelled.ToString()</option>
                    }
                </select>
                <button id="@order.Id" status="@order.Status" class="status-update" style="display:none;">Update</button>
            </form>
        </div>
    </div>
}

@section Scripts
{
    <script>
    window.onload = async function () {
        let selects = document.getElementsByClassName("status-select");
        let updates = document.getElementsByClassName("status-update");
        
        for (let i = 0; i < selects.length; i++) {
            selects[i].addEventListener("change", function () {
                updates[i].style.display = "inline-block";
            });
        }
        
        for (let i = 0; i < selects.length; i++) {
            updates[i].addEventListener("click", async function () {
                let id = updates[i].id;
                let status = updates[i].getAttribute("status");
                let response = await fetch("/Checkout/UpdateStatus?orderId=" + id + "&newStatus=" + status)
                updates[i].style.display = "none";
            });    
        }
    }
    </script>
}
