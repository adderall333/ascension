@model Models.Category

@{
    ViewBag.Title = "Catalog";
    Layout = "_Layout";
}

<div class="row">
    <div class="col-2 filters-block">
        <div class="row">
            <p class="fs-4">
                Specifications
            </p>
        </div>
        <div class="row">
            @foreach (var specification in Model.Specifications)
            {
                @await Html.PartialAsync("SpecificationFilterPartial", specification)
            }
        </div>
    </div>
    <div class="col-10 content-block">
        <div class="row search-sort-block">
            <div class="dropdown col-2">
                <button class="btn dropdown-toggle sort-btn" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                    Sort
                </button>
                <ul class="dropdown-menu sort-menu" aria-labelledby="dropdownMenuButton1">
                    <li><a sortOption="cheapFirst" class="dropdown-item" href="#">Cheap first</a></li>
                    <li><a sortOption="expensiveFirst" class="dropdown-item" href="#">Expensive first</a></li>
                    <li><a sortOption="alphabet" class="dropdown-item" href="#">By alphabet</a></li>
                </ul>
            </div>
            <div id="load" class="col">
                <img class="load-img" src="/img/load.gif" alt=""/>
            </div>
        </div>
        <div id="products" class="row"></div>
    </div>
</div>

<script>
let optionIds = new Set();
let sortOption = "";

let params = window
    .location
    .search
    .replace('?','')
    .split('&')
    .reduce(
        function(p, e){
            let a = e.split('=');
            p[decodeURIComponent(a[0])] = decodeURIComponent(a[1]);
            return p;
        },
        {}
    );

function toString(set) {
    let result = '';
    let isFirst = true;
    
    for (let e of set){
        if (isFirst)
            isFirst = false;
        else
            result += ','
        result += e;
    }
    return result;
}

async function getProducts() {
    document.getElementById("load").style.display = "block";
    let response = await fetch("@Url.Action("GetProducts")?" + 
                                               "category=" + params['name'] + 
                                               "&sortOption="+ sortOption + 
                                               "&ids=" + toString(optionIds) + 
                                               "&searchString=" + params['searchString']
                                               );
    document.getElementById("products").innerHTML = await response.text();
    document.getElementById("load").style.display = "none";
    
    let buttons = document.getElementsByClassName("open-product");
    for (let i = 0; i < buttons.length; i++ ) {
        buttons[i].addEventListener("click", async function(e) {
              if (e.target.id !== "add-to-cart" && e.target.parentElement.id !== "add-to-cart")
                  window.location.href = "/Catalog/Product?id=" + buttons[i].id
              else
              {
                  let response = await fetch("/Cart/AddProductLine?productId=" + buttons[i].id, { method: "POST"});
                  if (e.target.id === "add-to-cart") {
                        e.target.disabled = true;
                        e.target.innerHTML = "Already in cart";
                  }
                  else {
                        e.target.parentElement.disabled = true;
                        e.target.parentElement.innerHTML = "Already in cart";
                  } 
              }
        });
    } 
}

window.onload = async function () {
    getProducts();
    
    let sortOptions = document.getElementsByClassName('dropdown-item');
    for (let i = 0; i < sortOptions.length; i++ )
        sortOptions[i].addEventListener('click', function (){
            sortOption = sortOptions[i].getAttribute('sortOption');
            getProducts();
        });
    
    let checkboxes = document.getElementsByClassName('filter');
    for (let i = 0; i < checkboxes.length; i++)  
        checkboxes[i].addEventListener('click', function (){
            if (checkboxes[i].checked)
                optionIds.add(checkboxes[i].getAttribute('id'));
            else
                optionIds.delete(checkboxes[i].getAttribute('id'));
            getProducts();
        });
}
</script>