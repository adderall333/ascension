@model Models.Product

@{
    ViewBag.Title = Model.Name;
    Layout = "_Layout";
}

@section Styles {
    <link rel="stylesheet" href="~/css/review.css">
}

<div class="row">
    <div class="col-4">
        <div>
            <p class="fs-4">
                @Model.Name
            </p>
        </div>
        <div>
            <div class="main-image gallery">
                @foreach (var image in Model.Images)
                {
                    <a class="gallery-image" href="@image.Path">
                        <img src="@image.Path"/>
                    </a>
                }
            </div>
            <div class="row images">
                @foreach (var image in Model.Images)
                {
                    <div class="col mini-image">
                        <img class="image" id="@image.Id" src="@image.Path"/>
                    </div>
                }
            </div>
        </div>
    </div>
    <div id="specifications" class="col-8 product-info specifications">
        <div class="row">
            <p class="fs-4">
                Specifications
            </p>
        </div>
        <div class="row">
            @foreach (var specificationOption in Model.SpecificationOptions)
            {
                <div class="col-6 fs-5">
                    @specificationOption.Specification.Name
                </div>
                <div class="col-6 fs-5">
                    @specificationOption.Name
                </div>
            }
        </div>
    </div>
    <div id="description" class="col-8 product-info description">
        <div class="row">
            <p class="fs-4">
                Description
            </p>
        </div>
        <div class="row">
            <div class="col fs-5">
                @Model.Description
            </div>
        </div>
    </div>

    <div id="reviews" class="col-8 product-info reviews">
        <div class="row">
            <p class="fs-4">
                @{
                    var rating = 0.0;
                    var prodRating = Model.Rating;
                    if (prodRating != null)
                    {
                        rating = Math.Round((double)Model.Rating.Sum / Model.Rating.Count, 1);
                    }
                }
                Rating: @rating.ToString("0.0")
            </p>
        </div>
        <div class="row">
            <div class="col fs-5">
                @if (Context.Session.Keys.Contains("isAuth"))
                {
                    <form method="POST" class="review_form" onsubmit="return false;">
                        <textarea class="review_add_comment" name="" id="add-comment" placeholder="Add comment..."></textarea>
                        <div class="under_textarea">
                            <div class="add_stars">
                                <div id="star1" class="star_btn">☆</div>
                                <div id="star2" class="star_btn">☆</div>
                                <div id="star3" class="star_btn">☆</div>
                                <div id="star4" class="star_btn">☆</div>
                                <div id="star5" class="star_btn">☆</div>
                            </div>
                            <div id="stars_message">
                                <div id="stars_arrow">❮❮</div>
                                Rait this product from 1 to 5
                            </div>
                        </div>
                        <input id="prod_id" style="display: none;" type="number" value="@Model.Id">
                        <button type="submit" id="add-review-btn" class="btn btn-outline-light product-btn">Add review</button>
                    </form>
                }
                else
                {
                    //var routeUrl = Url.RouteUrl(ViewContext.RouteData.Values);
                    //var qsPath = ViewContext.HttpContext.Request.QueryString.Value;
                    //var redirectUrl = $"{routeUrl}{qsPath}";
                    //Context.Session.SetString("redirect_url", redirectUrl);
                    <div class="please-signin">Please <a asp-controller="Authentication" asp-action="Signin" id="redirect-url" class="signin-link">sign in</a> to add review</div>
                }
            </div>
        </div>
        <partial name="ReviewsPartial"/>
    </div>

</div>
<div class="row product-btns">
    <div class="col-9">
        <button id="specifications-btn" class="btn btn-outline-light product-btn">Specifications</button>
        <button id="description-btn" class="btn btn-outline-light product-btn">Description</button>
        <button id="reviews-btn" class="btn btn-outline-light product-btn">Reviews</button>
    </div>
    <div class="col-1 fs-5 product-price">
        @Model.Cost$
    </div>
    <div class="col-2">
        <button class="btn btn-outline-light product-btn">Add to cart</button>
    </div>
</div>

<div class="buy-with-it">
    <p class="fs-4">
        Usually buy with it
    </p>
    <div class="row flex-nowrap scroll-x">
        @foreach (var product in Model.Purchases.Select(p => p.SecondProduct))
        {
            @await Html.PartialAsync("ProductPreviewPartial", product)
        }
    </div>
</div>

<script>
window.onload = function () {
    baguetteBox.run('.gallery');
    
    let currentElement = document.getElementById('specifications');
    
    let changeElement = function (newElement) {
        if (currentElement !== newElement) {
            currentElement.style.display = 'none';
            newElement.style.display = 'block';
            currentElement = newElement;
        }
    }
    
    document.getElementById('description-btn').addEventListener('click', function () {
        changeElement(document.getElementById('description'));
    });
    document.getElementById('specifications-btn').addEventListener('click', function () {
        changeElement(document.getElementById('specifications'));
    });
    document.getElementById('reviews-btn').addEventListener('click', function () {
        changeElement(document.getElementById('reviews'));
    });
    
    let galleryImages = document.getElementsByClassName("gallery-image");
    let currentImage = galleryImages[0];
    
    let changeImage = function (newImage) {
        if (currentImage !== newImage) {
            currentImage.style.display = 'none';
            newImage.style.display = 'block';
            currentImage = newImage;
        }
    }
    
    for (let i = 0; i < galleryImages.length; i++) {
        if (i !== 0)
            galleryImages[i].style.display = 'none';
    } 
    
    let images = document.getElementsByClassName("image");
    
    for (let i = 0; i < images.length; i++) {
        images[i].addEventListener("click", function () {
           changeImage(galleryImages[i]);
        });
    }
}
</script>

@section Scripts
{
    <script src="~/js/review.js"></script>
    <script src="~/js/redirectUrl.js"></script>
}